name: Release

on:
    push:
        tags:
            - 'v*'

jobs:
    release:
        runs-on: ubuntu-latest
        
        steps:
            - name: Generate GitHub App Token
              uses: actions/create-github-app-token@v1
              id: app-token
              with:
                  app-id: ${{ vars.APP_ID }}
                  private-key: ${{ secrets.APP_PRIVATE_KEY }}

            - name: "‚è¨ Check out repository code"
              uses: actions/checkout@v4
              with:
                  submodules: recursive
                  token: ${{ steps.app-token.outputs.token }}

            - name: Setup .NET
              uses: actions/setup-dotnet@v4
              with:
                  dotnet-version: '9.0.x'

            - name: Restore dependencies
              run: dotnet restore

            - name: Build
              run: dotnet build --no-restore --configuration Release

            - name: Test
              run: dotnet test --no-build --configuration Release --verbosity normal

            - name: Package Plugin
              run: |
                  # Create plugin directory structure
                  mkdir -p plugin-package
                  
                  # Publish the plugin with all dependencies
                  dotnet publish PluginManager.Plugins.XMA \
                    --configuration Release \
                    --output plugin-package \
                    --self-contained false \
                    --no-restore
                  
                  # Ensure plugin.json is in the output
                  if [ ! -f "plugin-package/plugin.json" ]; then
                    cp PluginManager.Plugins.XMA/plugin.json plugin-package/
                  fi
                  
                  # Remove unnecessary files to reduce size
                  cd plugin-package
                  rm -f *.pdb *.xml *.deps.json *.runtimeconfig.json
                  
                  # Create the zip directly from the plugin files
                  zip -r ../XMAPlugin-${{ github.ref_name }}.zip .

            - name: Create Release
              id: create_release
              uses: actions/create-release@v1
              env:
                  GITHUB_TOKEN: ${{ steps.app-token.outputs.token }}
              with:
                  tag_name: ${{ github.ref_name }}
                  release_name: XMA Plugin ${{ github.ref_name }}
                  body: |
                      ## XMA Plugin ${{ github.ref_name }}
                      
                      ### Installation
                      1. Download `XMAPlugin-${{ github.ref_name }}.zip`
                      2. Extract to your `plugins/` directory
                      3. Restart your application
                      
                      ### Changes
                      See commit history for detailed changes.
                  draft: false
                  prerelease: false

            - name: Upload Release Asset
              uses: actions/upload-release-asset@v1
              env:
                  GITHUB_TOKEN: ${{ steps.app-token.outputs.token }}
              with:
                  upload_url: ${{ steps.create_release.outputs.upload_url }}
                  asset_path: ./XMAPlugin-${{ github.ref_name }}.zip
                  asset_name: XMAPlugin-${{ github.ref_name }}.zip
                  asset_content_type: application/zip
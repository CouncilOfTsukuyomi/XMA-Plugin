name: Build and Release

on:
    push:
        tags:
            - 'v*'
    pull_request:
        branches: [ main ]
    workflow_dispatch:
        inputs:
            version:
                description: 'Version tag (e.g., v1.0.0)'
                required: true
                default: 'v1.0.0'

jobs:
    build:
        runs-on: ubuntu-latest
        
        steps:
            - name: Generate GitHub App Token
              uses: actions/create-github-app-token@v1
              id: app-token
              with:
                  app-id: ${{ vars.APP_ID }}
                  private-key: ${{ secrets.APP_PRIVATE_KEY }}

            - name: "‚è¨ Check out repository code"
              uses: actions/checkout@v4
              with:
                  submodules: recursive
                  token: ${{ steps.app-token.outputs.token }}

            - name: Setup .NET
              uses: actions/setup-dotnet@v4
              with:
                  dotnet-version: '9.0.x'

            - name: Restore dependencies
              run: dotnet restore

            - name: Build
              run: dotnet build --no-restore --configuration Release

            - name: Test
              run: dotnet test --no-build --configuration Release --verbosity normal

            - name: Package Plugin
              if: startsWith(github.ref, 'refs/tags/') || github.event_name == 'workflow_dispatch'
              run: |
                  mkdir -p plugin-package
                  cp PluginManager.Plugins.XMA/bin/Release/net9.0/* plugin-package/
                  cd plugin-package
                  VERSION_TAG=${{ github.ref_name }}
                  if [ "${{ github.event_name }}" == "workflow_dispatch" ]; then
                    VERSION_TAG=${{ github.event.inputs.version }}
                  fi
                  zip -r ../XMAPlugin-${VERSION_TAG}.zip .

            - name: "üè∑Ô∏è Create and Push tag"
              if: github.event_name == 'workflow_dispatch'
              uses: EndBug/latest-tag@latest
              with:
                  tag-name: ${{ github.event.inputs.version }}
                  description: "Release ${{ github.event.inputs.version }}"
              env:
                  GITHUB_TOKEN: ${{ steps.app-token.outputs.token }}

            - name: Create Release
              if: startsWith(github.ref, 'refs/tags/') || github.event_name == 'workflow_dispatch'
              id: create_release
              uses: actions/create-release@v1
              env:
                  GITHUB_TOKEN: ${{ steps.app-token.outputs.token }}
              with:
                  tag_name: ${{ github.event_name == 'workflow_dispatch' && github.event.inputs.version || github.ref_name }}
                  release_name: XMA Plugin ${{ github.event_name == 'workflow_dispatch' && github.event.inputs.version || github.ref_name }}
                  draft: false
                  prerelease: false

            - name: Upload Release Asset
              if: startsWith(github.ref, 'refs/tags/') || github.event_name == 'workflow_dispatch'
              uses: actions/upload-release-asset@v1
              env:
                  GITHUB_TOKEN: ${{ steps.app-token.outputs.token }}
              with:
                  upload_url: ${{ steps.create_release.outputs.upload_url }}
                  asset_path: ./XMAPlugin-${{ github.event_name == 'workflow_dispatch' && github.event.inputs.version || github.ref_name }}.zip
                  asset_name: XMAPlugin-${{ github.event_name == 'workflow_dispatch' && github.event.inputs.version || github.ref_name }}.zip
                  asset_content_type: application/zip